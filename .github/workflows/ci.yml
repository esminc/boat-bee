name: CI/CD

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: lambda/app
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v3
        with:
          python-version: "3.9.11"
      - uses: actions/setup-node@v2
      - run: npm install -g prettier@2.6.2
      - run: pip install pipenv
      - uses: actions/cache@v3.0.1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('./Pipfile.lock') }}
      - run: make init
      - run: make format-check
      - run: make lint-check
      - run: make type-check
      - run: make test

  cdk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cdk
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: cdk/package-lock.json
      - run: npm install
      - run: npm run fmt:check
      - run: npm run build
      - run: npm test

  notify-if-failure:
    runs-on: ubuntu-latest
    needs: [app, cdk]
    if: failure()
    steps:
      - name: Notify Action Failure to Slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "GitHub Actions 失敗通知 \n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Actions 失敗通知 \n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.PR_MESSAGE_SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  deploy:
    runs-on: ubuntu-latest
    needs: [app, cdk]
    if: contains(github.event_name, 'push')
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: cdk/package-lock.json
      - run: npm install
        working-directory: ./cdk
      - run: npm run deploy:ci:dev
        working-directory: ./cdk
      - name: Notify Action Result to Slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "[boat-bee] development環境へのデプロイ: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "[boat-bee] development環境へのデプロイ: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.PR_MESSAGE_SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
