service: bee

frameworkVersion: "3"

provider:
  name: aws
  ecr:
    images:
      appimage:
        path: ./
  environment:
    SLACK_CREDENTIALS_SECRET_ID: slack_secret_${sls:stage}
    DYNAMODB_TABLE: ${self:service}-${sls:stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "*"

functions:
  app:
    image:
      name: appimage
    url: true
    events:
      - http:
          method: post
          path: /slack/events

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  dynamodb:
    stages:
      - dev
    start:
      seed: true
    seed:
      development:
        sources:
          - table: bee-dev
            sources: [database/seed/review.json]

resources: # CloudFormation template syntax from here on.
  Resources:
    BeeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: isbn
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: isbn
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
